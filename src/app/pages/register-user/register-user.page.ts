import { Component, OnInit, ViewChild } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Gym, User } from 'src/app/models/gym';
import { GymManagementService } from 'src/app/services/gym-management.service';
import { IonDatetime } from '@ionic/angular';

@Component({
  selector: 'app-register-user',
  templateUrl: './register-user.page.html',
  styleUrls: ['./register-user.page.scss'],
})
export class RegisterUserPage implements OnInit {
  gymId: string | null = null;
  gymInfo: Gym | null = null;
  loading: boolean = false;
  error: string | null = null;

  // User object to hold form data, conforming to the User interface
  user: User = {
    userId: 0, // Default value, will be generated by the backend
    name: '',
    phoneNumber: '',
    email: '',
    dateOfBirth: '',
    gender: 'Male',
    address: '',
    emergencyContact: '',
    expiryDate: '', // Optional, can be set later
    createdDate: '', // Optional, can be set later
  };

  @ViewChild('dobPicker')
  dobPicker!: IonDatetime;

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private gymManagementService: GymManagementService
  ) {}

  ngOnInit() {
    // Read gymId from query params
    this.gymId = this.route.snapshot.queryParamMap.get('gymId');
    console.log('Gym ID:', this.gymId);

    if (this.gymId) {
      this.getGymInfo();
    }
  }

  getGymInfo() {
    if (!this.gymId) {
      this.error = 'Gym ID not found in URL';
      return;
    }

    this.loading = true;
    this.error = null;

    this.gymManagementService.getGymInfo(this.gymId).subscribe({
      next: (response) => {
        console.log(response);
        if (response.success) {
          this.gymInfo = response.gymInfo;
        } else {
          this.error = 'Failed to fetch gym details';
        }
        this.loading = false;
      },
      error: (err) => {
        this.error = 'An error occurred while fetching gym details';
        console.error(err);
        this.loading = false;
      },
    });
  }

  submitForm() {
    if (!this.user.name || !this.user.phoneNumber) {
      this.error = 'Name and Phone Number are mandatory.';
      return;
    }

    if (this.dobPicker) {
      this.user.dateOfBirth =
        typeof this.dobPicker.value === 'string' ? this.dobPicker.value : '';
    }
    console.log('User Data:', this.user);

    // Perform registration logic here (e.g., send data to the server)
    this.loading = true;
    this.error = null;

    this.gymManagementService.registerUser(this.gymId, this.user).subscribe({
      next: (user) => {
        this.loading = false;
        console.log('User registered successfully:', user);
        // Handle success, e.g., navigate to a success page
        this.router
          .navigate(['/membership'], {
            queryParams: { gymId: this.gymId, phoneNumber: user.phoneNumber },
          })
          .then(() => {
            window.location.reload();
          });
      },
      error: (err) => {
        this.loading = false;
        this.error = 'Failed to register user. Please try again.';
        console.error('Registration error:', err);
        // Handle error, e.g., display an error message to the user
      },
    });
  }
}
